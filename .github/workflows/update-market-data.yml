name: Update Market Data
on:
  schedule:
    - cron: '0 */6 * * *'  # Fixed: Removed extra asterisk
  workflow_dispatch:  # Allows manual triggering
  push:
    branches:
      - master  # Triggers on push to master branch

jobs:
  update-market-data:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests pyyaml
        
    - name: Create project lists
      run: |
        cd scripts
        python3 coingeckoandmanual.py  # Fixed: Changed to python3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Fetch CoinGecko data
      run: |
        cd scripts
        python3 curl_req_v2.py  # Fixed: Changed to python3
      env:
        COINGECKO_API_KEY: ${{ secrets.COINGECKO_API_KEY }}
        
    - name: Update market data
      run: |
        cd scripts
        python3 mis-data.py  # Fixed: Changed to python3
        
    - name: Handle missing data
      run: |
        cd scripts
        python3 missing-data.py  # Fixed: Changed to python3
        
    - name: Commit and push changes
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add .
        git diff --quiet && git diff --staged --quiet || (git commit -m "Update market data [skip ci]" && git push)

  trigger-build:
    needs: update-market-data
    runs-on: ubuntu-latest
    if: success()
    
    steps:
      - name: Debug PAT
        run: |
          if [ -z "${{ secrets.PAT }}" ]; then
            echo "PAT is not set"
            exit 1
          else
            echo "PAT is set"
          fi
          
      - name: Trigger Build and Deploy Workflow
        run: |
          # Set the required variables
          repo_owner="i-shivamsoni"
          repo_name="airdrop-archive"
          
          # Debug information
          echo "Triggering workflow in: $repo_owner/$repo_name"
          
          # Make the API call
          response=$(curl -s -w "\n%{http_code}" \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.PAT }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/$repo_owner/$repo_name/dispatches \
            -d '{"event_type": "workflow_dispatch"}')
          
          # Split response into body and status code
          body=$(echo "$response" | sed '$d')
          status_code=$(echo "$response" | tail -n1)
          
          # Debug output
          echo "Response status code: $status_code"
          echo "Response body: $body"
          
          # Check if the request was successful
          if [ "$status_code" -ne 204 ]; then
            echo "Failed to trigger workflow"
            exit 1
          fi
